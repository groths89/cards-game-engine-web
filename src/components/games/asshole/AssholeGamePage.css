/* --- Base Styles (Mobile-First Defaults) --- */

.asshole-game-board-wrapper {
  display: flex;
  flex-direction: column; /* Mobile: stack vertically */
  align-items: center;
  flex-grow: 1;
  justify-content: center;
  width: 90%; /* Mobile: narrower width */
  max-width: 1200px; /* Still apply max-width for very large screens */
  margin: var(--spacing-sm) auto; /* Mobile: smaller top/bottom margin */
  background-color: var(--bg-page);
  color: var(--text-primary);
  font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
  box-shadow: 0 4px 15px var(--shadow-black);
  min-height: auto; /* Mobile: auto height, or define a smaller min-height like 60vh */
  position: relative;
  padding: var(--spacing-md); /* Mobile padding */
}

.asshole-game-board-wrapper h2 {
  color: var(--text-primary);
  margin-bottom: var(--spacing-md);
  font-size: 1.8em; /* Mobile: slightly smaller font size for h2 */
  letter-spacing: 1px;
  text-align: center;
  position: relative;
  z-index: 5;
}

.asshole-game-board-wrapper h3 {
  color: var(--text-primary);
  margin-bottom: var(--spacing-lg);
  font-size: 1em; /* Mobile: smaller font size for h3 */
  text-align: center;
  position: relative;
  z-index: 5;
}

.error-message {
  color: var(--status-error);
  font-size: 1em; /* Mobile: slightly smaller font size */
  margin-top: var(--spacing-md);
  text-align: center;
}

/* --- Game Board Area --- */
.game-board {
  display: flex;
  flex-direction: column;
  align-items: center;
  width: 100%;
  max-width: 1200px;
  margin-top: var(--spacing-md);
}

.game-board-layout {
  display: grid;
  /* Mobile: stack all areas vertically for easier touch access */
  grid-template-columns: 1fr;
  grid-template-rows: auto auto auto auto; /* Re-evaluate rows based on new order */
  grid-template-areas:
    "top-players"
    "main-area"
    "controls" /* Move controls up for mobile reach */
    "player-hand"; /* Player hand at the very bottom */
  gap: var(--spacing-sm); /* Mobile: smaller gap */
  width: 100%;
  height: 100%;
  overflow-x: hidden;
}

/* --- Pile Area --- */
.top-players {
  grid-area: top-players;
  display: flex;
  justify-content: center;
  align-items: flex-start;
  gap: var(--spacing-md); /* Mobile gap */
  flex-wrap: wrap;
  padding: var(--spacing-sm); /* Mobile padding */
  background-color: rgba(0, 0, 0, 0.2);
  border-radius: var(--border-radius-md);
  min-height: 100px; /* Mobile min-height */
  width: 100%;
}

.main-area {
  grid-area: main-area;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: var(--spacing-sm); /* Mobile padding */
  background-color: rgba(0, 0, 0, 0.3);
  border-radius: var(--border-radius-md);
  min-height: 150px; /* Mobile min-height */
  width: 35%; /* Mobile: smaller width for main area */
  position: relative;
}

/* --- Interrupt Overlay Area Styles --- */
.interrupt-overlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.7);
  color: white;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  text-align: center;
  padding: 20px; /* Consider making this a variable */
  box-sizing: border-box;
  border-radius: 8px;
  z-index: 10;
}

.interrupt-overlay h3 {
  margin-top: 0;
  color: #ffd700;
}

.interrupt-overlay p {
  margin-bottom: 10px; /* Consider making this a variable */
}

.interrupt-overlay .interrupt-actions button {
  margin: 5px; /* Consider making this a variable */
  padding: 10px 15px; /* Consider making this a variable */
  font-size: 1em;
  cursor: pointer;
}

.interrupt-overlay .current-interrupt-bids {
  margin-top: 15px; /* Consider making this a variable */
  font-size: 0.9em;
}

.interrupt-overlay .current-interrupt-bids ul {
  list-style: none;
  padding: 0;
  max-height: 80px; /* Consider making this a variable */
  overflow-y: auto;
}

.interrupt-overlay .current-interrupt-bids li {
  margin-bottom: 3px; /* Consider making this a variable */
}

.controls-area {
  grid-area: controls;
  display: flex;
  flex-direction: row; /* Mobile: Keep buttons in a row for immediate actions */
  width: 30%; /* Mobile: smaller width for controls */
  box-sizing: border-box;
  align-items: center;
  justify-content: center; /* Center for mobile */
  padding: var(--spacing-md);
  margin-bottom: var(--spacing-sm);
}

.pile-area {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: var(--spacing-sm);
  min-height: 150px;
  position: relative;
  width: 100%;
  max-width: 250px; /* Mobile pile area can be smaller */
  margin: 0 auto;
}

.pile-area h4 {
  margin-bottom: var(--spacing-sm);
  font-size: 1.1em; /* Mobile: slightly smaller font size */
  color: var(--text-primary);
}

.pile-cards-display {
  display: flex;
  position: relative;
  justify-content: center;
  align-items: center;
  width: 100%;
  height: 120px; /* Mobile: Adjusted height for pile */
  max-width: 120px; /* Mobile: Smaller max-width */
  margin-bottom: var(--spacing-sm);
  overflow: hidden;
}

.pile-cards-display .card {
  width: 70px; /* Mobile: Adjusted card size */
  height: 98px;
  border-radius: 8px; /* Should be a variable */
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.4);
  position: absolute;
  transform-origin: center;
  transition: all 0.3s ease-out;
  top: 50%;
  left: 50%;
}

.pile-cards-display .card:nth-last-child(1) {
  z-index: 5;
  transform: translate(-50%, -50%) rotate(0deg);
}
.pile-cards-display .card:nth-last-child(2) {
  z-index: 4;
  transform: translate(calc(-50% - 7px), calc(-50% - 4px)) rotate(-3deg); /* Adjusted values for smaller cards */
}
.pile-cards-display .card:nth-last-child(3) {
  z-index: 3;
  transform: translate(calc(-50% + 7px), calc(-50% + 4px)) rotate(3deg); /* Adjusted values for smaller cards */
}
.pile-cards-display .card:nth-last-child(4) {
  z-index: 2;
  transform: translate(calc(-50% - 14px), calc(-50% - 8px)) rotate(-6deg); /* Adjusted values for smaller cards */
}
.pile-cards-display .card:nth-last-child(5) {
  z-index: 1;
  transform: translate(calc(-50% + 14px), calc(-50% + 8px)) rotate(6deg); /* Adjusted values for smaller cards */
}

.pile-info {
  font-size: 0.9em;
  color: var(--text-secondary);
  margin-top: var(--spacing-sm);
}

.no-pile-message {
  font-style: italic;
  color: var(--text-secondary);
}

/* Animations remain the same, as they are independent of layout */
.animating-pile-clear {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  pointer-events: none;
  overflow: hidden;
}

.animating-pile-clear .card-wrapper {
  position: absolute;
  animation: pileClearSweepAway 0.8s ease-out forwards;
  --end-x: 0px;
  --end-y: 0px;
  --end-rotate: 0deg;
}

@keyframes fadeAndShrink {
  0% {
    opacity: 1;
    transform: scale(1);
  }
  100% {
    opacity: 0;
    transform: scale(0.5);
  }
}

@keyframes pileClearSweepAway {
  0% {
    opacity: 1;
    transform: translate(0, 0) rotate(0deg) scale(1);
  }
  100% {
    opacity: 0;
    transform: translate(var(--end-x), var(--end-y)) rotate(var(--end-rotate))
      scale(0.8);
  }
}

/* --- Opponent Display Styles --- */
.opponent-display {
  display: flex;
  flex-direction: row; /* Mobile: row for compactness */
  align-items: center;
  gap: var(--spacing-sm); /* Mobile gap */
  width: 100%; /* Mobile: full width */
  justify-content: space-between; /* Space out name/count and cards */
  padding: var(--spacing-sm);
  border: 1px solid var(--border-dark);
  border-radius: var(--border-radius-md);
  background-color: var(--bg-card);
  transition: all 0.2s ease;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.3);
}

.opponent-display.current-turn {
  border-color: var(--color-primary);
  box-shadow:
    0 0 10px var(--color-primary),
    inset 0 0 5px var(--color-primary);
  transform: translateY(-5px);
}

.opponent-info {
  display: flex;
  flex-direction: row; /* Mobile: info in a row */
  align-items: center;
  gap: var(--spacing-xs); /* Mobile gap for info */
  margin-bottom: 0; /* No bottom margin on mobile */
}

.opponent-name {
  font-weight: 600;
  font-size: 1em; /* Mobile: smaller name font */
  color: var(--text-primary);
}

.opponent-cards-count {
  font-size: 0.7em; /* Mobile: smaller count font */
  color: var(--text-secondary);
}

.opponent-cards {
  display: flex;
  justify-content: center;
  flex-wrap: wrap;
  gap: 0; /* Remove gap, rely on negative margin */
}

.opponent-cards .card {
  width: 45px; /* Mobile: smaller face-down cards */
  height: 63px;
  border-radius: var(--border-radius-sm); /* Should be a variable */
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.2);
  margin-right: -25px; /* Mobile overlap */
}

.opponent-cards .card:last-child {
  margin-right: 0;
}

/* --- Player Hand Area --- */
.player-hand-container {
  grid-area: player-hand; /* Ensure grid area is set for mobile */
  display: flex;
  justify-content: center;
  align-items: flex-end;
  position: relative;
  width: 100%;
  overflow-x: hidden;
  padding: var(--spacing-md) 0;
  margin-top: var(--spacing-lg);
  perspective: 1000px;
}

/* Style for individual cards within the hand */
.player-hand-container .card {
  /* Mobile: less overlap */
  width: 100px; /* Mobile card width (from your previous example, adjusting slightly) */
  height: 140px; /* Mobile card height */
  margin-left: -20px;
  transition:
    transform 0.2s ease-out,
    margin-left 0.2s ease-out,
    z-index 0.1s ease;
  cursor: pointer;
  position: relative;
  z-index: 1; /* Base z-index */
  transform-origin: bottom center;
  transform: rotate(0deg);
}

.player-hand-container .card:first-child {
  margin-left: 0;
}

/* Hover effect: bring card to front, slightly lift, and maybe spread a bit more */
.player-hand-container .card:hover {
  z-index: 10;
  transform: translateY(-5px) scale(1.02); /* Mobile: less dramatic lift on hover */
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
}

/* Active/selected card style */
.player-hand-container .card.selected {
  border: 3px solid var(--action-primary);
  box-shadow: 0 0 10px
    color-mix(in srgb, var(--action-primary) 70%, transparent); /* Mobile shadow */
  transform: translateY(-15px) scale(1.05); /* Mobile: less dramatic lift when selected */
  z-index: 15;
}

/* Individual card image/face styling (adjust for mobile sizes) */
.card-image {
  width: 80px; /* Mobile size */
  height: 110px; /* Mobile size */
  background-color: var(--color-off-white);
  border: 1px solid var(--border-default);
  border-radius: var(--border-radius-default);
  box-shadow: 1px 1px 3px rgba(0, 0, 0, 0.3);
  cursor: pointer;
  transition:
    transform 0.1s ease-in-out,
    box-shadow 0.1s ease-in-out;
  display: flex;
  justify-content: center;
  align-items: center;
  color: var(--color-dark-text);
  font-weight: bold;
  font-size: 0.9em;
  position: relative;
}

.card-image img {
  max-width: 100%;
  max-height: 100%;
  display: block;
  object-fit: contain;
}

.card-image.no-image {
  background-color: var(--color-white);
  font-size: 1em;
}

.card-image.selected {
  transform: translateY(-5px); /* Mobile: less lift */
  box-shadow: 0 5px 15px
    color-mix(in srgb, var(--action-primary) 60%, transparent);
  border-color: var(--action-primary);
}

/* --- Action Buttons --- */
.game-top-bar {
  display: flex;
  flex-direction: column; /* Mobile: stack top bar items */
  align-items: center; /* Center them */
  justify-content: center;
  margin-bottom: var(--spacing-md);
  padding: 0 var(--spacing-sm);
  width: 100%;
  gap: var(--spacing-sm); /* Gap between stacked items */
}

.game-board-actions {
  display: flex;
  flex-direction: column; /* Mobile: Stack play/pass buttons vertically */
  align-items: center; /* Center action buttons */
  margin-top: 0;
  margin-bottom: 0;
  gap: var(--spacing-sm);
  flex-shrink: 0;
  width: 100%; /* Make it span full width for button stacking */
}

.player-turn-actions {
  display: flex;
  flex-direction: column; /* Mobile: Stack these actions */
  gap: var(--spacing-sm); /* Mobile gap for stacked buttons */
  padding: var(--spacing-xs);
  justify-content: center;
  align-items: center; /* Center buttons within their container */
  width: 100%;
  max-width: 400px; /* Keep a max-width for sanity */
}

.room-management-actions {
  display: flex;
  flex-direction: column; /* Mobile: Stack room management buttons */
  gap: var(--spacing-md);
  justify-content: center;
  width: 100%;
  max-width: 400px; /* Keep a max-width for sanity */
}

/* Base button style (now mobile-first defaults) */
.button {
  padding: var(--spacing-sm) var(--spacing-md); /* Mobile padding */
  border: none;
  border-radius: var(--border-radius-default);
  font-size: 1em; /* Mobile font size */
  font-weight: bold;
  cursor: pointer;
  transition:
    background-color 0.3s ease,
    transform 0.1s ease,
    box-shadow 0.3s ease;
  flex-grow: 1;
  min-width: 100px; /* Mobile min-width for buttons */
  color: var(--color-white);
  width: 100%; /* Mobile: full width buttons */
}

/* Other button styles (play, pass, leave, delete) remain largely the same, inherit from .button */
.button:hover:not(:disabled) {
  transform: translateY(-2px);
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
}

.button:disabled {
  background-color: var(--action-disabled);
  cursor: not-allowed;
  opacity: 0.6;
  color: var(--text-disabled);
}

.play-button {
  background-color: var(--color-vibrant-green);
}
.play-button:hover:not(:disabled) {
  background-color: var(--action-accent-dark);
}
.pass-button {
  background-color: var(--action-primary);
}
.pass-button:hover:not(:disabled) {
  background-color: var(--action-hover);
}
.leave-room-button {
  padding: var(--spacing-sm) var(--spacing-xs);
  font-size: 0.8em;
  background-color: var(--color-gold-yellow);
  color: var(--text-on-light);
}
.leave-room-button:hover:not(:disabled) {
  background-color: color-mix(in srgb, var(--color-gold-yellow) 90%, black);
}
.delete-room-button {
  background-color: var(--color-deep-red);
}
.delete-room-button:hover:not(:disabled) {
  background-color: color-mix(in srgb, var(--color-deep-red) 90%, black);
}

.start-game-button {
  width: 100%; /* Mobile: full width for start game button */
  font-size: 1em;
  padding: var(--spacing-md);
  margin-top: var(--spacing-md);
}

/* --- Rankings / Game Over Section --- */
.rankings-section {
  margin-top: var(--spacing-lg);
  background-color: var(--bg-card);
  padding: var(--spacing-lg);
  border-radius: var(--border-radius-default);
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.4);
  text-align: center;
  width: 90%; /* Mobile: wider width for rankings */
  max-width: 500px;
  color: var(--text-primary);
}

.rankings-section h3 {
  color: var(--action-primary);
  margin-bottom: var(--spacing-md);
}

.rankings-list {
  list-style: none;
  padding: 0;
  margin: 0;
}

.rankings-list li {
  font-size: 1.1em;
  padding: var(--spacing-xs) 0;
  border-bottom: 1px solid var(--border-default);
  color: var(--text-primary);
}

.rankings-list li:last-child {
  border-bottom: none;
}

/* =========================================================================== */
/* --- Responsive Adjustments (min-width for larger screens) --- */
/* =========================================================================== */

/* --- Medium Screens (Tablets & up) --- */
@media (min-width: 768px) {
  .asshole-game-board-wrapper {
    margin: var(--spacing-md) auto; /* Desktop margin */
    min-height: 70vh; /* Restore desktop min-height */
    width: 100%; /* Allow full 100% width up to max-width */
  }

  .asshole-game-board-wrapper h2 {
    font-size: 2.2em; /* Restore desktop font size for h2 */
  }

  .asshole-game-board-wrapper h3 {
    font-size: 1.2em; /* Restore desktop font size for h3 */
  }

  .error-message {
    font-size: 1.1em; /* Restore desktop font size */
  }

  .game-board-layout {
    /* For tablets/small laptops, let's create a 3-column layout where:
       - Left column (e.g., for future side info, or just padding)
       - Main column (wider for pile and main content)
       - Right column (for buttons)
    */
    grid-template-columns: 1fr 2fr 1fr; /* Example: adjust proportions as needed */
    grid-template-rows: auto 1fr auto;
    grid-template-areas:
      "top-players top-players top-players" /* Top players span full top */
      "left-pad main-area right-pad" /* Added padding columns for better centering */
      ". player-hand ." /* Player hand centered at bottom, still spans main column implicitly */
      ". controls ."; /* Controls centered at bottom below hand implicitly */
    gap: var(--spacing-md); /* Restore desktop gap */
  }

  /* Specific Grid Area Styling for larger screens */
  .top-players {
    grid-area: top-players; /* Remains top */
    padding: var(--spacing-md); /* Restore desktop padding */
    min-height: 120px; /* Restore desktop min-height */
    gap: var(--spacing-lg); /* Restore desktop gap */
  }

  /*
   * We need to define the 'left-pad' and 'right-pad' if you're using them in grid-template-areas.
   * If these aren't actual elements, you can use grid column definitions directly on main-area.
   * For simplicity here, I'll adjust the main-area's grid-column property.
   */
  .main-area {
    grid-area: main-area; /* Remains central area */
    padding: var(--spacing-md);
    min-height: 200px; /* Restore desktop min-height */
    /* Make the main-area span across the middle column */
    grid-column: 2 / 3; /* Spans the second column in the 3-column grid */
    width: auto; /* Let grid handle width */
  }

  .controls-area {
    grid-area: controls;
    grid-column: 3 / 4; /* Place controls in the rightmost column */
    justify-content: flex-end; /* Align buttons to the right */
    align-items: center; /* Vertically center them */
    flex-direction: row; /* Stack buttons vertically for better use of narrow column */
    gap: var(--spacing-md); /* Adjust gap if stacking */
    padding: var(--spacing-md);
    width: auto; /* Let grid manage width */
  }

  .pile-area {
    width: 100%; /* Take full width of its container within main-area */
    max-width: 300px; /* Give it a bit more max-width than mobile */
    min-height: 200px; /* Make the pile area a bit taller */
  }

  .pile-area h4 {
    font-size: 1.2em; /* Restore desktop font size */
  }

  .pile-cards-display {
    height: 200px; /* Increase height for cards to spread more */
    max-width: 200px; /* Increase max-width for pile cards */
  }

  .pile-cards-display .card {
    width: 120px; /* Larger cards for tablet */
    height: 168px;
    /* Adjust transforms for larger cards and more spread */
  }
  .pile-cards-display .card:nth-last-child(2) {
    transform: translate(calc(-50% - 12px), calc(-50% - 6px)) rotate(-3deg);
  }
  .pile-cards-display .card:nth-last-child(3) {
    transform: translate(calc(-50% + 12px), calc(-50% + 6px)) rotate(3deg);
  }
  .pile-cards-display .card:nth-last-child(4) {
    transform: translate(calc(-50% - 24px), calc(-50% - 12px)) rotate(-6deg);
  }
  .pile-cards-display .card:nth-last-child(5) {
    transform: translate(calc(-50% + 24px), calc(-50% + 12px)) rotate(6deg);
  }

  .opponent-display {
    flex-direction: column; /* Restore desktop column layout */
    align-items: center;
    gap: var(--spacing-sm);
    width: auto; /* Allow width to shrink to content */
    justify-content: center; /* Restore desktop justification */
  }

  .opponent-info {
    flex-direction: column; /* Restore desktop column layout for info */
    gap: var(--spacing-xs);
    margin-bottom: var(--spacing-xs); /* Restore desktop margin */
  }

  .opponent-name {
    font-size: 1.1em; /* Restore desktop font size */
  }

  .opponent-cards-count {
    font-size: 0.8em; /* Restore desktop font size */
  }

  .opponent-cards .card {
    width: 60px; /* Restore desktop card size */
    height: 84px;
    margin-right: -40px; /* Restore desktop overlap */
  }

  .player-hand-container {
    /* For tablets, we can make the cards a bit larger and spread more */
    padding: var(--spacing-lg) 0; /* More padding top/bottom */
    margin-top: var(--spacing-xl); /* More margin from above */
    /* Ensure it spans the correct grid column if you want it aligned with main-area */
    grid-column: 2 / 3; /* Aligns with main-area in the 3-column grid */
    align-items: center; /* Center the hand */
    justify-content: center; /* Center cards horizontally */
  }

  .player-hand-container .card {
    width: 130px; /* Slightly larger cards for tablet */
    height: 182px;
    margin-left: -40px; /* More overlap than mobile, less than full desktop */
  }
  .player-hand-container .card:hover {
    transform: translateY(-15px) scale(1.05); /* Increased lift on hover */
  }
  .player-hand-container .card.selected {
    transform: translateY(-25px) scale(1.08); /* Increased lift when selected */
  }

  .card-image {
    width: 100px; /* Card image size for tablet */
    height: 140px;
  }
  .card-image.selected {
    transform: translateY(-8px); /* Adjust selected lift for card image */
  }

  .game-top-bar {
    flex-direction: row; /* Restore desktop row direction */
    justify-content: space-between; /* Restore desktop justification */
    align-items: flex-start;
    gap: 0; /* Remove gap, use justify-content */
  }

  .game-board-actions {
    flex-direction: row; /* Restore desktop row direction */
    align-items: flex-end;
    gap: var(--spacing-sm);
    width: auto; /* Allow width to shrink */
  }

  .player-turn-actions {
    flex-direction: row; /* Stack play/pass buttons vertically in the right column */
    gap: var(--spacing-sm);
    width: auto; /* Allow buttons to size based on content/container */
    align-items: flex-end; /* Align buttons to the right */
  }

  .room-management-actions {
    flex-direction: column; /* Stack room management buttons vertically too */
    gap: var(--spacing-sm);
    width: auto;
    align-items: flex-end; /* Align buttons to the right */
  }

  .button {
    width: auto; /* Allow buttons to size to content */
    min-width: 150px; /* Give them a bit more min-width */
    font-size: 1.1em; /* Slightly larger font */
    padding: var(--spacing-md); /* Consistent padding */
  }

  .start-game-button {
    width: auto; /* Restore auto width for desktop */
    font-size: 1.2em; /* Restore desktop font size */
    padding: var(--spacing-md) var(--spacing-lg); /* Restore desktop padding */
    margin-top: 0; /* Restore desktop margin */
  }

  .rankings-section {
    width: 80%; /* Restore desktop width */
  }
}

/* --- Large Screens (Desktops & up - for additional adjustments) --- */
@media (min-width: 1024px) {
  /* Example: If you need even wider margins or specific adjustments for very large screens */
  .asshole-game-board-wrapper {
    margin: var(--spacing-lg) auto; /* Even more margin on large screens */
  }

  .game-board-layout {
    /* Refine desktop grid for larger screens if needed */
    grid-template-areas:
      "top-players top-players top-players"
      "side-panel-left main-area side-panel-right"
      ". player-hand ."
      ". controls .";
  }

  /* .player-hand-container .card {
    margin-left: -70px; // Example of even more overlap on very large screens
  } */
}

/* The .main-game-content was in the original @media (max-width: 768px) but not defined globally.
   Assuming it's a wrapper for main content that might have a margin-left on desktop. */
.main-game-content {
  /* Mobile-first: no margin-left */
  margin-left: 0;
}
@media (min-width: var(--breakpoint-md)) {
  .main-game-content {
    /* Example desktop margin-left */
    /* margin-left: var(--spacing-lg); */
  }
}
